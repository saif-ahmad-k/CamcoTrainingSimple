@page "/TestAttempt/TestFinished"

@using Syncfusion.Blazor.DropDowns
@using CamcoTrainingSimple.Data
@using CamcoTrainingSimple.Data.Models
@using System.ComponentModel.DataAnnotations
@using Syncfusion.Blazor.Notifications
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Spinner
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager
@inject Blazored.Toast.Services.IToastService toastService

<header>
    <h1 style="text-align: center">Attempt new Test</h1>
</header>

<div class="container-fluid p-3" style="background-color:white; border: 2px solid black">
    <EditForm Model="@atTestInfo" id="editForm" OnValidSubmit="@HandleValidSubmit" Context="mainContext">
        <DataAnnotationsValidator />
        <ValidationSummary />
        @*<div class="row">
            <div class="col-lg-12 control-section">
                <h4 for="datetimeopen">Date/Time Open</h4>
                <div class="control_wrapper">
                    <h3>@atTestInfo.DateTimeOpen.ToString()</h3>
                </div>
            </div>
        </div>*@
        <div class="row">
            <div class="col-lg-12 control-section">
                <div class="control_wrapper">
                    <label for="TestId" class="control-label">Test Finished</label>
                   
                </div>
            </div>
        </div>
      

        <div class="text-center mt-4">
            <button class="btn btn-success" type="submit">Go Back</button>
        </div>
    </EditForm>
</div>

<!--<SfSpinner @ref="SpinnerObj" Target="#editForm">
</SfSpinner>-->

@code { private bool IsSubmitted = false;
    private NewTestDetails atTestInfo = new NewTestDetails();
    private List<tTest>
    TestsList;
    private List<tEmployee>
        EmployeesList;
    private List<tInterviewer>
        InterviewerList;
    SfSpinner SpinnerObj;
    private string Target { get; set; } = "#editForm";

    private string[] _cssTypes = new string[] { "e-toast-warning", "e-toast-success", "e-toast-danger", "e-toast-info" };

   

 

    //public void TestChanged()
    //{
    //    using (var db = new TrainingDbContext())
    //    {
    //        atTestInfo.TestId = db.MaintenanceMasterEquipmentList.Where(a => a.EquipmentStatus == "ACTIVE" && (a.Location == atTestInfo.Location || a.Location == "CAMCO") && a.IsActive).OrderBy(a => a.EquipmentBrassTag).ToList();
    //    }
    //}

    public async void HandleValidSubmit()
    {
        try
        {
           

              
                navigationManager.NavigateTo($"/TestAttempt/SelectTest");
            }

        
        catch (Exception ex)
        {
            toastService.ShowError("Error submitting Work Order!", "Failed Submit");
            IsSubmitted = false;
        }
        //SpinnerObj.HideSpinner(Target);
    }

    public partial class NewTestDetails
    {
        //[Required]
        public int? InterviewerId { get; set; }
        //[Required]
        public int? EmployeeId { get; set; }
        //[Required]
        public int? TestId { get; set; }

    } }